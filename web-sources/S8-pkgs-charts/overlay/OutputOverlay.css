
/* <overlay> */


.output-overlay {
	position: absolute;
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100%;
	background-color: rgba(188, 188, 188, 0.64);
	z-index: 1;
	cursor: pointer;
}

.output-overlay-box {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.output-overlay-icon {
	position: relative;
	left: 50%;
	transform: translateX(-32px);
}

.output-overlay-icon > svg {
	filter: drop-shadow(0px 0px 8px rgba(128, 128, 128, 0.92));
}

.output-overlay-icon > svg {
	fill: rgb(151, 255, 151);
}

.output-overlay-message{
	font-family: "SF Pro Text", "SF Pro Icons", "Helvetica Neue", Helvetica, Arial, sans-serif;
	font-size: 16px;
	font-weight: normal;
	color:rgba(46, 46, 46, 0.92);
	background-color: rgb(238, 238, 238);
	padding: 16px;
	margin: 0px;
	border-radius: 16px;
	border: solid 6px rgb(151, 255, 151);
	box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.92);
}


/* <out-of-sync-state> */

.output-overlay[state="out-of-sync"] {
	visibility: visible;
	backdrop-filter: blur(1px);
}


.output-overlay[state="out-of-sync"]:hover svg {
	fill: lime;
}

.output-overlay[state="out-of-sync"] .output-overlay-message {
	border-color: rgb(151, 255, 151);
}

/* </out-of-sync-state> */

/* <syncing-state> */
@keyframes rotating {
	from {
		transform: translate(-50%, -50%) rotate(0deg);
	}

	to {
		transform: translate(-50%, -50%) rotate(360deg);
	}
}
.output-overlay[state="syncing"]{
	cursor: auto;
	backdrop-filter: blur(1px);
}

.output-overlay[state="syncing"] svg {
	visibility: visible;
	animation: rotating 2s linear infinite;
	fill: yellow;
}
/* </syncing-state> */


/* <synced> */
.output-overlay[state="synced"] {
	visibility: hidden;
	cursor: auto;
}
/* </synced> */


/* <failed-state> */
.output-overlay[state="failed"] {
	cursor: auto;
	backdrop-filter: blur(1px);
}

.output-overlay[state="failed"] svg {
	fill: rgb(255, 92, 22);
}

.output-overlay[state="failed"] .output-overlay-message {
	border-color: rgb(255, 92, 22);
}
/* </failed-state> */


/* </states> */